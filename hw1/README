

************************CSCI-E295 - Homework 1: Lexer******************************

This source code compiles into a lexer capable of scanning and recognizing tokens belonging to a subset of the C language. It can read input from stdin or optionally from a file. For each token read, it outputs one line to either stdout, or optionally a file, listing the token's line number, text, type and value, as well as other attributes specific to the token types.

Usage:
	lexer [<input>] [<output>]
	
Each of the input and output can be filenames, which sets the input or output to the corresponding file, or "-" or empty, which sets the input to stdin or output to stdout.

Each line in the output consists of:
	- The line number of the current token
	- The text of the token
	- The type of the token, or "ERROR" if it does not belong to a recognized type
	- The value of the token if it has one. 
		* For a token of type STRING_CONST or CHAR_CONST, the value is the string or character's contents
		* For a token of type INTEGER_CONST, the value is the number's numeric value
		* For a token of type IDENTIFIER, the value is the identifier itself
	- If the token is an integer constant, whether it caused an overflow

Acknowledgements:

This lexer was built with suggestions from Daniel Willenson and Professor James Frankel's sample lexers.