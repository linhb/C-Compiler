Terminals which are not used

   LONG_CONST
   UNSIGNED_LONG_CONST


State 289 conflicts: 1 shift/reduce


Grammar

    0 $accept: root $end

    1 root: translation_unit

    2 translation_unit: top_level_decl
    3                 | translation_unit top_level_decl

    4 top_level_decl: decl
    5               | function_definition

    6 decl: declaration_specifiers initialized_declarator_list SEMICOLON

    7 function_definition: function_def_specifier compound_statement

    8 compound_statement: LEFT_CURLY_BRACE declaration_or_statement_list RIGHT_CURLY_BRACE
    9                   | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

   10 declaration_or_statement_list: declaration_or_statement
   11                              | declaration_or_statement_list declaration_or_statement

   12 declaration_or_statement: decl
   13                         | statement

   14 statement: expression_statement
   15          | labeled_statement
   16          | compound_statement
   17          | conditional_statement
   18          | iterative_statement
   19          | break_statement
   20          | continue_statement
   21          | return_statement
   22          | goto_statement
   23          | null_statement
   24          | error SEMICOLON

   25 labeled_statement: label COLON statement

   26 expression_statement: expr SEMICOLON

   27 conditional_statement: if_statement
   28                      | if_else_statement

   29 iterative_statement: while_statement
   30                    | do_statement
   31                    | for_statement

   32 break_statement: BREAK SEMICOLON

   33 continue_statement: CONTINUE SEMICOLON

   34 return_statement: RETURN expr SEMICOLON
   35                 | RETURN SEMICOLON

   36 goto_statement: GOTO named_label SEMICOLON

   37 named_label: IDENTIFIER

   38 null_statement: SEMICOLON

   39 label: named_label

   40 if_else_statement: IF LEFT_PAREN expr RIGHT_PAREN statement ELSE statement

   41 if_statement: IF LEFT_PAREN expr RIGHT_PAREN statement

   42 while_statement: WHILE LEFT_PAREN expr RIGHT_PAREN statement

   43 do_statement: DO statement WHILE LEFT_PAREN expr RIGHT_PAREN SEMICOLON

   44 for_statement: FOR for_expr statement

   45 for_expr: LEFT_PAREN initial_clause SEMICOLON expr SEMICOLON expr RIGHT_PAREN
   46         | LEFT_PAREN SEMICOLON expr SEMICOLON expr RIGHT_PAREN
   47         | LEFT_PAREN initial_clause SEMICOLON SEMICOLON expr RIGHT_PAREN
   48         | LEFT_PAREN initial_clause SEMICOLON expr SEMICOLON RIGHT_PAREN
   49         | LEFT_PAREN initial_clause SEMICOLON SEMICOLON RIGHT_PAREN
   50         | LEFT_PAREN SEMICOLON expr SEMICOLON RIGHT_PAREN
   51         | LEFT_PAREN SEMICOLON SEMICOLON expr RIGHT_PAREN
   52         | LEFT_PAREN SEMICOLON SEMICOLON RIGHT_PAREN

   53 initial_clause: expr
   54               | decl

   55 function_def_specifier: declaration_specifiers declarator
   56                       | declarator

   57 initialized_declarator: declarator

   58 declarator: pointer_decl
   59           | direct_declarator

   60 pointer: STAR
   61        | STAR pointer

   62 pointer_decl: pointer direct_declarator

   63 direct_declarator: simple_declarator
   64                  | LEFT_PAREN declarator RIGHT_PAREN
   65                  | function_declarator
   66                  | array_declarator

   67 simple_declarator: IDENTIFIER

   68 function_declarator: direct_declarator LEFT_PAREN parameter_type_list RIGHT_PAREN

   69 parameter_decl: declaration_specifiers declarator
   70               | declaration_specifiers abstract_declarator
   71               | declaration_specifiers

   72 abstract_declarator: pointer
   73                    | pointer direct_abstract_declarator
   74                    | direct_abstract_declarator

   75 direct_abstract_declarator: LEFT_PAREN abstract_declarator RIGHT_PAREN
   76                           | direct_abstract_declarator LEFT_BRACKET constant_expr RIGHT_BRACKET
   77                           | LEFT_BRACKET constant_expr RIGHT_BRACKET
   78                           | direct_abstract_declarator LEFT_BRACKET RIGHT_BRACKET
   79                           | direct_abstract_declarator LEFT_PAREN parameter_type_list RIGHT_PAREN
   80                           | LEFT_PAREN parameter_type_list RIGHT_PAREN
   81                           | direct_abstract_declarator LEFT_PAREN RIGHT_PAREN

   82 constant_expr: conditional_expr

   83 parameter_list: parameter_decl
   84               | parameter_list COMMA parameter_decl

   85 parameter_type_list: parameter_list

   86 array_declarator: direct_declarator LEFT_BRACKET constant_expr RIGHT_BRACKET
   87                 | direct_declarator LEFT_BRACKET RIGHT_BRACKET

   88 initialized_declarator_list: initialized_declarator
   89                            | initialized_declarator_list COMMA initialized_declarator

   90 expression_list: assignment_expr
   91                | expression_list COMMA assignment_expr

   92 expr: comma_expr

   93 comma_expr: assignment_expr
   94           | comma_expr COMMA assignment_expr

   95 assignment_expr: conditional_expr
   96                | unary_expr assignment_op assignment_expr

   97 assignment_op: ASSIGN
   98              | ADD_AND_ASSIGN
   99              | SUBTRACT_AND_ASSIGN
  100              | MULTIPLY_AND_ASSIGN
  101              | DIVIDE_AND_ASSIGN
  102              | REMAINDER_AND_ASSIGN
  103              | BITSHIFT_LEFT_AND_ASSIGN
  104              | BITSHIFT_RIGHT_AND_ASSIGN
  105              | BITWISE_AND_AND_ASSIGN
  106              | BITWISE_OR_AND_ASSIGN
  107              | BITWISE_XOR_AND_ASSIGN

  108 conditional_expr: logical_or_expr
  109                 | logical_or_expr QUESTION_MARK expr COLON conditional_expr

  110 logical_or_expr: logical_and_expr
  111                | logical_or_expr LOGICAL_OR logical_and_expr

  112 logical_and_expr: bitwise_or_expr
  113                 | logical_and_expr LOGICAL_AND bitwise_or_expr

  114 bitwise_and_expr: equality_expr
  115                 | bitwise_and_expr AMPERSAND equality_expr

  116 equality_expr: relational_expr
  117              | equality_expr equality_op relational_expr

  118 equality_op: IS_EQUAL
  119            | IS_NOT_EQUAL

  120 relational_expr: shift_expr
  121                | relational_expr relational_op shift_expr

  122 relational_op: LESS_THAN
  123              | LESS_THAN_OR_EQUAL
  124              | GREATER_THAN
  125              | GREATER_THAN_OR_EQUAL

  126 shift_expr: additive_expr
  127           | shift_expr shift_op additive_expr

  128 shift_op: BITSHIFT_RIGHT
  129         | BITSHIFT_LEFT

  130 additive_expr: multiplicative_expr
  131              | additive_expr add_op multiplicative_expr

  132 add_op: PLUS
  133       | DASH

  134 multiplicative_expr: cast_expr
  135                    | multiplicative_expr mult_op cast_expr

  136 mult_op: STAR
  137        | SLASH
  138        | REMAINDER

  139 cast_expr: unary_expr
  140          | LEFT_PAREN type_name RIGHT_PAREN cast_expr

  141 type_name: declaration_specifiers abstract_declarator
  142          | declaration_specifiers

  143 declaration_specifiers: type_specifier

  144 type_specifier: integer_type_specifier
  145               | void_type_specifier

  146 integer_type_specifier: signed_type_specifier
  147                       | unsigned_type_specifier
  148                       | character_type_specifier

  149 signed_type_specifier: SHORT
  150                      | SHORT INT
  151                      | SIGNED SHORT
  152                      | SIGNED SHORT INT
  153                      | INT
  154                      | SIGNED INT
  155                      | SIGNED
  156                      | LONG
  157                      | LONG INT
  158                      | SIGNED LONG
  159                      | SIGNED LONG INT

  160 character_type_specifier: CHAR
  161                         | SIGNED CHAR
  162                         | UNSIGNED CHAR

  163 bitwise_or_expr: bitwise_xor_expr
  164                | bitwise_or_expr BITWISE_OR bitwise_xor_expr

  165 bitwise_xor_expr: bitwise_and_expr
  166                 | bitwise_xor_expr BITWISE_XOR bitwise_and_expr

  167 unary_expr: postfix_expr
  168           | unary_minus_expr
  169           | unary_plus_expr
  170           | logical_negation_expr
  171           | bitwise_negation_expr
  172           | address_expr
  173           | indirection_expr
  174           | preincrement_expr
  175           | predecrement_expr

  176 unary_minus_expr: DASH cast_expr

  177 unary_plus_expr: PLUS cast_expr

  178 logical_negation_expr: LOGICAL_NOT cast_expr

  179 bitwise_negation_expr: BITWISE_COMPLEMENT cast_expr

  180 address_expr: AMPERSAND cast_expr

  181 indirection_expr: STAR cast_expr

  182 postfix_expr: primary_expr
  183             | subscript_expr
  184             | function_call
  185             | postincrement_expr
  186             | postdecrement_expr

  187 primary_expr: IDENTIFIER
  188             | STRING_CONST
  189             | INTEGER_CONST
  190             | parenthesized_expr

  191 parenthesized_expr: LEFT_PAREN expr RIGHT_PAREN

  192 subscript_expr: postfix_expr LEFT_BRACKET expr RIGHT_BRACKET

  193 predecrement_expr: DECREMENT unary_expr

  194 preincrement_expr: INCREMENT unary_expr

  195 function_call: postfix_expr LEFT_PAREN expression_list RIGHT_PAREN
  196              | postfix_expr LEFT_PAREN RIGHT_PAREN

  197 postdecrement_expr: postfix_expr DECREMENT

  198 postincrement_expr: postfix_expr INCREMENT

  199 unsigned_type_specifier: UNSIGNED SHORT INT
  200                        | UNSIGNED INT
  201                        | UNSIGNED LONG INT

  202 void_type_specifier: VOID


Terminals, with rules where they appear

$end (0) 0
error (256) 24
DO (258) 43
FOR (259) 44
RETURN (260) 34 35
BREAK (261) 32
SHORT (262) 149 150 151 152 199
ELSE (263) 40
GOTO (264) 36
SIGNED (265) 151 152 154 155 158 159 161
UNSIGNED (266) 162 199 200 201
CHAR (267) 160 161 162
IF (268) 40 41
VOID (269) 202
INT (270) 150 152 153 154 157 159 199 200 201
CONTINUE (271) 33
LONG (272) 156 157 158 159 201
WHILE (273) 42 43
IDENTIFIER (274) 37 67 187
STRING_CONST (275) 188
INTEGER_CONST (276) 189
LONG_CONST (277)
UNSIGNED_LONG_CONST (278)
LEFT_CURLY_BRACE (279) 8 9
RIGHT_CURLY_BRACE (280) 8 9
COMMA (281) 84 89 91 94
SEMICOLON (282) 6 24 26 32 33 34 35 36 38 43 45 46 47 48 49 50 51 52
COLON (283) 25 109
LEFT_BRACKET (284) 76 77 78 86 87 192
RIGHT_BRACKET (285) 76 77 78 86 87 192
LEFT_PAREN (286) 40 41 42 43 45 46 47 48 49 50 51 52 64 68 75 79 80
    81 140 191 195 196
RIGHT_PAREN (287) 40 41 42 43 45 46 47 48 49 50 51 52 64 68 75 79 80
    81 140 191 195 196
INCREMENT (288) 194 198
DECREMENT (289) 193 197
BITWISE_COMPLEMENT (290) 179
LOGICAL_NOT (291) 178
PLUS (292) 132 177
DASH (293) 133 176
AMPERSAND (294) 115 180
STAR (295) 60 61 136 181
SLASH (296) 137
REMAINDER (297) 138
BITSHIFT_LEFT (298) 129
BITSHIFT_RIGHT (299) 128
LESS_THAN (300) 122
GREATER_THAN (301) 124
LESS_THAN_OR_EQUAL (302) 123
GREATER_THAN_OR_EQUAL (303) 125
IS_EQUAL (304) 118
IS_NOT_EQUAL (305) 119
BITWISE_XOR (306) 166
BITWISE_OR (307) 164
LOGICAL_AND (308) 113
LOGICAL_OR (309) 111
QUESTION_MARK (310) 109
ASSIGN (311) 97
ADD_AND_ASSIGN (312) 98
SUBTRACT_AND_ASSIGN (313) 99
MULTIPLY_AND_ASSIGN (314) 100
DIVIDE_AND_ASSIGN (315) 101
REMAINDER_AND_ASSIGN (316) 102
BITWISE_AND_AND_ASSIGN (317) 105
BITWISE_OR_AND_ASSIGN (318) 106
BITWISE_XOR_AND_ASSIGN (319) 107
BITSHIFT_LEFT_AND_ASSIGN (320) 103
BITSHIFT_RIGHT_AND_ASSIGN (321) 104


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
root (68)
    on left: 1, on right: 0
translation_unit (69)
    on left: 2 3, on right: 1 3
top_level_decl (70)
    on left: 4 5, on right: 2 3
decl (71)
    on left: 6, on right: 4 12 54
function_definition (72)
    on left: 7, on right: 5
compound_statement (73)
    on left: 8 9, on right: 7 16
declaration_or_statement_list (74)
    on left: 10 11, on right: 8 11
declaration_or_statement (75)
    on left: 12 13, on right: 10 11
statement (76)
    on left: 14 15 16 17 18 19 20 21 22 23 24, on right: 13 25 40 41
    42 43 44
labeled_statement (77)
    on left: 25, on right: 15
expression_statement (78)
    on left: 26, on right: 14
conditional_statement (79)
    on left: 27 28, on right: 17
iterative_statement (80)
    on left: 29 30 31, on right: 18
break_statement (81)
    on left: 32, on right: 19
continue_statement (82)
    on left: 33, on right: 20
return_statement (83)
    on left: 34 35, on right: 21
goto_statement (84)
    on left: 36, on right: 22
named_label (85)
    on left: 37, on right: 36 39
null_statement (86)
    on left: 38, on right: 23
label (87)
    on left: 39, on right: 25
if_else_statement (88)
    on left: 40, on right: 28
if_statement (89)
    on left: 41, on right: 27
while_statement (90)
    on left: 42, on right: 29
do_statement (91)
    on left: 43, on right: 30
for_statement (92)
    on left: 44, on right: 31
for_expr (93)
    on left: 45 46 47 48 49 50 51 52, on right: 44
initial_clause (94)
    on left: 53 54, on right: 45 47 48 49
function_def_specifier (95)
    on left: 55 56, on right: 7
initialized_declarator (96)
    on left: 57, on right: 88 89
declarator (97)
    on left: 58 59, on right: 55 56 57 64 69
pointer (98)
    on left: 60 61, on right: 61 62 72 73
pointer_decl (99)
    on left: 62, on right: 58
direct_declarator (100)
    on left: 63 64 65 66, on right: 59 62 68 86 87
simple_declarator (101)
    on left: 67, on right: 63
function_declarator (102)
    on left: 68, on right: 65
parameter_decl (103)
    on left: 69 70 71, on right: 83 84
abstract_declarator (104)
    on left: 72 73 74, on right: 70 75 141
direct_abstract_declarator (105)
    on left: 75 76 77 78 79 80 81, on right: 73 74 76 78 79 81
constant_expr (106)
    on left: 82, on right: 76 77 86
parameter_list (107)
    on left: 83 84, on right: 84 85
parameter_type_list (108)
    on left: 85, on right: 68 79 80
array_declarator (109)
    on left: 86 87, on right: 66
initialized_declarator_list (110)
    on left: 88 89, on right: 6 89
expression_list (111)
    on left: 90 91, on right: 91 195
expr (112)
    on left: 92, on right: 26 34 40 41 42 43 45 46 47 48 50 51 53 109
    191 192
comma_expr (113)
    on left: 93 94, on right: 92 94
assignment_expr (114)
    on left: 95 96, on right: 90 91 93 94 96
assignment_op (115)
    on left: 97 98 99 100 101 102 103 104 105 106 107,
    on right: 96
conditional_expr (116)
    on left: 108 109, on right: 82 95 109
logical_or_expr (117)
    on left: 110 111, on right: 108 109 111
logical_and_expr (118)
    on left: 112 113, on right: 110 111 113
bitwise_and_expr (119)
    on left: 114 115, on right: 115 165 166
equality_expr (120)
    on left: 116 117, on right: 114 115 117
equality_op (121)
    on left: 118 119, on right: 117
relational_expr (122)
    on left: 120 121, on right: 116 117 121
relational_op (123)
    on left: 122 123 124 125, on right: 121
shift_expr (124)
    on left: 126 127, on right: 120 121 127
shift_op (125)
    on left: 128 129, on right: 127
additive_expr (126)
    on left: 130 131, on right: 126 127 131
add_op (127)
    on left: 132 133, on right: 131
multiplicative_expr (128)
    on left: 134 135, on right: 130 131 135
mult_op (129)
    on left: 136 137 138, on right: 135
cast_expr (130)
    on left: 139 140, on right: 134 135 140 176 177 178 179 180 181
type_name (131)
    on left: 141 142, on right: 140
declaration_specifiers (132)
    on left: 143, on right: 6 55 69 70 71 141 142
type_specifier (133)
    on left: 144 145, on right: 143
integer_type_specifier (134)
    on left: 146 147 148, on right: 144
signed_type_specifier (135)
    on left: 149 150 151 152 153 154 155 156 157 158 159,
    on right: 146
character_type_specifier (136)
    on left: 160 161 162, on right: 148
bitwise_or_expr (137)
    on left: 163 164, on right: 112 113 164
bitwise_xor_expr (138)
    on left: 165 166, on right: 163 164 166
unary_expr (139)
    on left: 167 168 169 170 171 172 173 174 175, on right: 96 139
    193 194
unary_minus_expr (140)
    on left: 176, on right: 168
unary_plus_expr (141)
    on left: 177, on right: 169
logical_negation_expr (142)
    on left: 178, on right: 170
bitwise_negation_expr (143)
    on left: 179, on right: 171
address_expr (144)
    on left: 180, on right: 172
indirection_expr (145)
    on left: 181, on right: 173
postfix_expr (146)
    on left: 182 183 184 185 186, on right: 167 192 195 196 197 198
primary_expr (147)
    on left: 187 188 189 190, on right: 182
parenthesized_expr (148)
    on left: 191, on right: 190
subscript_expr (149)
    on left: 192, on right: 183
predecrement_expr (150)
    on left: 193, on right: 175
preincrement_expr (151)
    on left: 194, on right: 174
function_call (152)
    on left: 195 196, on right: 184
postdecrement_expr (153)
    on left: 197, on right: 186
postincrement_expr (154)
    on left: 198, on right: 185
unsigned_type_specifier (155)
    on left: 199 200 201, on right: 147
void_type_specifier (156)
    on left: 202, on right: 145


state 0

    0 $accept: . root $end

    SHORT       shift, and go to state 1
    SIGNED      shift, and go to state 2
    UNSIGNED    shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5
    INT         shift, and go to state 6
    LONG        shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    STAR        shift, and go to state 10

    root                      go to state 11
    translation_unit          go to state 12
    top_level_decl            go to state 13
    decl                      go to state 14
    function_definition       go to state 15
    function_def_specifier    go to state 16
    declarator                go to state 17
    pointer                   go to state 18
    pointer_decl              go to state 19
    direct_declarator         go to state 20
    simple_declarator         go to state 21
    function_declarator       go to state 22
    array_declarator          go to state 23
    declaration_specifiers    go to state 24
    type_specifier            go to state 25
    integer_type_specifier    go to state 26
    signed_type_specifier     go to state 27
    character_type_specifier  go to state 28
    unsigned_type_specifier   go to state 29
    void_type_specifier       go to state 30


state 1

  149 signed_type_specifier: SHORT .
  150                      | SHORT . INT

    INT  shift, and go to state 31

    $default  reduce using rule 149 (signed_type_specifier)


state 2

  151 signed_type_specifier: SIGNED . SHORT
  152                      | SIGNED . SHORT INT
  154                      | SIGNED . INT
  155                      | SIGNED .
  158                      | SIGNED . LONG
  159                      | SIGNED . LONG INT
  161 character_type_specifier: SIGNED . CHAR

    SHORT  shift, and go to state 32
    CHAR   shift, and go to state 33
    INT    shift, and go to state 34
    LONG   shift, and go to state 35

    $default  reduce using rule 155 (signed_type_specifier)


state 3

  162 character_type_specifier: UNSIGNED . CHAR
  199 unsigned_type_specifier: UNSIGNED . SHORT INT
  200                        | UNSIGNED . INT
  201                        | UNSIGNED . LONG INT

    SHORT  shift, and go to state 36
    CHAR   shift, and go to state 37
    INT    shift, and go to state 38
    LONG   shift, and go to state 39


state 4

  160 character_type_specifier: CHAR .

    $default  reduce using rule 160 (character_type_specifier)


state 5

  202 void_type_specifier: VOID .

    $default  reduce using rule 202 (void_type_specifier)


state 6

  153 signed_type_specifier: INT .

    $default  reduce using rule 153 (signed_type_specifier)


state 7

  156 signed_type_specifier: LONG .
  157                      | LONG . INT

    INT  shift, and go to state 40

    $default  reduce using rule 156 (signed_type_specifier)


state 8

   67 simple_declarator: IDENTIFIER .

    $default  reduce using rule 67 (simple_declarator)


state 9

   64 direct_declarator: LEFT_PAREN . declarator RIGHT_PAREN

    IDENTIFIER  shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    STAR        shift, and go to state 10

    declarator           go to state 41
    pointer              go to state 18
    pointer_decl         go to state 19
    direct_declarator    go to state 20
    simple_declarator    go to state 21
    function_declarator  go to state 22
    array_declarator     go to state 23


state 10

   60 pointer: STAR .
   61        | STAR . pointer

    STAR  shift, and go to state 10

    $default  reduce using rule 60 (pointer)

    pointer  go to state 42


state 11

    0 $accept: root . $end

    $end  shift, and go to state 43


state 12

    1 root: translation_unit .
    3 translation_unit: translation_unit . top_level_decl

    SHORT       shift, and go to state 1
    SIGNED      shift, and go to state 2
    UNSIGNED    shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5
    INT         shift, and go to state 6
    LONG        shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    STAR        shift, and go to state 10

    $default  reduce using rule 1 (root)

    top_level_decl            go to state 44
    decl                      go to state 14
    function_definition       go to state 15
    function_def_specifier    go to state 16
    declarator                go to state 17
    pointer                   go to state 18
    pointer_decl              go to state 19
    direct_declarator         go to state 20
    simple_declarator         go to state 21
    function_declarator       go to state 22
    array_declarator          go to state 23
    declaration_specifiers    go to state 24
    type_specifier            go to state 25
    integer_type_specifier    go to state 26
    signed_type_specifier     go to state 27
    character_type_specifier  go to state 28
    unsigned_type_specifier   go to state 29
    void_type_specifier       go to state 30


state 13

    2 translation_unit: top_level_decl .

    $default  reduce using rule 2 (translation_unit)


state 14

    4 top_level_decl: decl .

    $default  reduce using rule 4 (top_level_decl)


state 15

    5 top_level_decl: function_definition .

    $default  reduce using rule 5 (top_level_decl)


state 16

    7 function_definition: function_def_specifier . compound_statement

    LEFT_CURLY_BRACE  shift, and go to state 45

    compound_statement  go to state 46


state 17

   56 function_def_specifier: declarator .

    $default  reduce using rule 56 (function_def_specifier)


state 18

   62 pointer_decl: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9

    direct_declarator    go to state 47
    simple_declarator    go to state 21
    function_declarator  go to state 22
    array_declarator     go to state 23


state 19

   58 declarator: pointer_decl .

    $default  reduce using rule 58 (declarator)


state 20

   59 declarator: direct_declarator .
   68 function_declarator: direct_declarator . LEFT_PAREN parameter_type_list RIGHT_PAREN
   86 array_declarator: direct_declarator . LEFT_BRACKET constant_expr RIGHT_BRACKET
   87                 | direct_declarator . LEFT_BRACKET RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 48
    LEFT_PAREN    shift, and go to state 49

    $default  reduce using rule 59 (declarator)


state 21

   63 direct_declarator: simple_declarator .

    $default  reduce using rule 63 (direct_declarator)


state 22

   65 direct_declarator: function_declarator .

    $default  reduce using rule 65 (direct_declarator)


state 23

   66 direct_declarator: array_declarator .

    $default  reduce using rule 66 (direct_declarator)


state 24

    6 decl: declaration_specifiers . initialized_declarator_list SEMICOLON
   55 function_def_specifier: declaration_specifiers . declarator

    IDENTIFIER  shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    STAR        shift, and go to state 10

    initialized_declarator       go to state 50
    declarator                   go to state 51
    pointer                      go to state 18
    pointer_decl                 go to state 19
    direct_declarator            go to state 20
    simple_declarator            go to state 21
    function_declarator          go to state 22
    array_declarator             go to state 23
    initialized_declarator_list  go to state 52


state 25

  143 declaration_specifiers: type_specifier .

    $default  reduce using rule 143 (declaration_specifiers)


state 26

  144 type_specifier: integer_type_specifier .

    $default  reduce using rule 144 (type_specifier)


state 27

  146 integer_type_specifier: signed_type_specifier .

    $default  reduce using rule 146 (integer_type_specifier)


state 28

  148 integer_type_specifier: character_type_specifier .

    $default  reduce using rule 148 (integer_type_specifier)


state 29

  147 integer_type_specifier: unsigned_type_specifier .

    $default  reduce using rule 147 (integer_type_specifier)


state 30

  145 type_specifier: void_type_specifier .

    $default  reduce using rule 145 (type_specifier)


state 31

  150 signed_type_specifier: SHORT INT .

    $default  reduce using rule 150 (signed_type_specifier)


state 32

  151 signed_type_specifier: SIGNED SHORT .
  152                      | SIGNED SHORT . INT

    INT  shift, and go to state 53

    $default  reduce using rule 151 (signed_type_specifier)


state 33

  161 character_type_specifier: SIGNED CHAR .

    $default  reduce using rule 161 (character_type_specifier)


state 34

  154 signed_type_specifier: SIGNED INT .

    $default  reduce using rule 154 (signed_type_specifier)


state 35

  158 signed_type_specifier: SIGNED LONG .
  159                      | SIGNED LONG . INT

    INT  shift, and go to state 54

    $default  reduce using rule 158 (signed_type_specifier)


state 36

  199 unsigned_type_specifier: UNSIGNED SHORT . INT

    INT  shift, and go to state 55


state 37

  162 character_type_specifier: UNSIGNED CHAR .

    $default  reduce using rule 162 (character_type_specifier)


state 38

  200 unsigned_type_specifier: UNSIGNED INT .

    $default  reduce using rule 200 (unsigned_type_specifier)


state 39

  201 unsigned_type_specifier: UNSIGNED LONG . INT

    INT  shift, and go to state 56


state 40

  157 signed_type_specifier: LONG INT .

    $default  reduce using rule 157 (signed_type_specifier)


state 41

   64 direct_declarator: LEFT_PAREN declarator . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 57


state 42

   61 pointer: STAR pointer .

    $default  reduce using rule 61 (pointer)


state 43

    0 $accept: root $end .

    $default  accept


state 44

    3 translation_unit: translation_unit top_level_decl .

    $default  reduce using rule 3 (translation_unit)


state 45

    8 compound_statement: LEFT_CURLY_BRACE . declaration_or_statement_list RIGHT_CURLY_BRACE
    9                   | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE

    error               shift, and go to state 58
    DO                  shift, and go to state 59
    FOR                 shift, and go to state 60
    RETURN              shift, and go to state 61
    BREAK               shift, and go to state 62
    SHORT               shift, and go to state 1
    GOTO                shift, and go to state 63
    SIGNED              shift, and go to state 2
    UNSIGNED            shift, and go to state 3
    CHAR                shift, and go to state 4
    IF                  shift, and go to state 64
    VOID                shift, and go to state 5
    INT                 shift, and go to state 6
    CONTINUE            shift, and go to state 65
    LONG                shift, and go to state 7
    WHILE               shift, and go to state 66
    IDENTIFIER          shift, and go to state 67
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_CURLY_BRACE    shift, and go to state 45
    RIGHT_CURLY_BRACE   shift, and go to state 70
    SEMICOLON           shift, and go to state 71
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    decl                           go to state 81
    compound_statement             go to state 82
    declaration_or_statement_list  go to state 83
    declaration_or_statement       go to state 84
    statement                      go to state 85
    labeled_statement              go to state 86
    expression_statement           go to state 87
    conditional_statement          go to state 88
    iterative_statement            go to state 89
    break_statement                go to state 90
    continue_statement             go to state 91
    return_statement               go to state 92
    goto_statement                 go to state 93
    named_label                    go to state 94
    null_statement                 go to state 95
    label                          go to state 96
    if_else_statement              go to state 97
    if_statement                   go to state 98
    while_statement                go to state 99
    do_statement                   go to state 100
    for_statement                  go to state 101
    expr                           go to state 102
    comma_expr                     go to state 103
    assignment_expr                go to state 104
    conditional_expr               go to state 105
    logical_or_expr                go to state 106
    logical_and_expr               go to state 107
    bitwise_and_expr               go to state 108
    equality_expr                  go to state 109
    relational_expr                go to state 110
    shift_expr                     go to state 111
    additive_expr                  go to state 112
    multiplicative_expr            go to state 113
    cast_expr                      go to state 114
    declaration_specifiers         go to state 115
    type_specifier                 go to state 25
    integer_type_specifier         go to state 26
    signed_type_specifier          go to state 27
    character_type_specifier       go to state 28
    bitwise_or_expr                go to state 116
    bitwise_xor_expr               go to state 117
    unary_expr                     go to state 118
    unary_minus_expr               go to state 119
    unary_plus_expr                go to state 120
    logical_negation_expr          go to state 121
    bitwise_negation_expr          go to state 122
    address_expr                   go to state 123
    indirection_expr               go to state 124
    postfix_expr                   go to state 125
    primary_expr                   go to state 126
    parenthesized_expr             go to state 127
    subscript_expr                 go to state 128
    predecrement_expr              go to state 129
    preincrement_expr              go to state 130
    function_call                  go to state 131
    postdecrement_expr             go to state 132
    postincrement_expr             go to state 133
    unsigned_type_specifier        go to state 29
    void_type_specifier            go to state 30


state 46

    7 function_definition: function_def_specifier compound_statement .

    $default  reduce using rule 7 (function_definition)


state 47

   62 pointer_decl: pointer direct_declarator .
   68 function_declarator: direct_declarator . LEFT_PAREN parameter_type_list RIGHT_PAREN
   86 array_declarator: direct_declarator . LEFT_BRACKET constant_expr RIGHT_BRACKET
   87                 | direct_declarator . LEFT_BRACKET RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 48
    LEFT_PAREN    shift, and go to state 49

    $default  reduce using rule 62 (pointer_decl)


state 48

   86 array_declarator: direct_declarator LEFT_BRACKET . constant_expr RIGHT_BRACKET
   87                 | direct_declarator LEFT_BRACKET . RIGHT_BRACKET

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    RIGHT_BRACKET       shift, and go to state 135
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    constant_expr          go to state 136
    conditional_expr       go to state 137
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 49

   68 function_declarator: direct_declarator LEFT_PAREN . parameter_type_list RIGHT_PAREN

    SHORT     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    CHAR      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7

    parameter_decl            go to state 139
    parameter_list            go to state 140
    parameter_type_list       go to state 141
    declaration_specifiers    go to state 142
    type_specifier            go to state 25
    integer_type_specifier    go to state 26
    signed_type_specifier     go to state 27
    character_type_specifier  go to state 28
    unsigned_type_specifier   go to state 29
    void_type_specifier       go to state 30


state 50

   88 initialized_declarator_list: initialized_declarator .

    $default  reduce using rule 88 (initialized_declarator_list)


state 51

   55 function_def_specifier: declaration_specifiers declarator .
   57 initialized_declarator: declarator .

    LEFT_CURLY_BRACE  reduce using rule 55 (function_def_specifier)
    $default          reduce using rule 57 (initialized_declarator)


state 52

    6 decl: declaration_specifiers initialized_declarator_list . SEMICOLON
   89 initialized_declarator_list: initialized_declarator_list . COMMA initialized_declarator

    COMMA      shift, and go to state 143
    SEMICOLON  shift, and go to state 144


state 53

  152 signed_type_specifier: SIGNED SHORT INT .

    $default  reduce using rule 152 (signed_type_specifier)


state 54

  159 signed_type_specifier: SIGNED LONG INT .

    $default  reduce using rule 159 (signed_type_specifier)


state 55

  199 unsigned_type_specifier: UNSIGNED SHORT INT .

    $default  reduce using rule 199 (unsigned_type_specifier)


state 56

  201 unsigned_type_specifier: UNSIGNED LONG INT .

    $default  reduce using rule 201 (unsigned_type_specifier)


state 57

   64 direct_declarator: LEFT_PAREN declarator RIGHT_PAREN .

    $default  reduce using rule 64 (direct_declarator)


state 58

   24 statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 145


state 59

   43 do_statement: DO . statement WHILE LEFT_PAREN expr RIGHT_PAREN SEMICOLON

    error               shift, and go to state 58
    DO                  shift, and go to state 59
    FOR                 shift, and go to state 60
    RETURN              shift, and go to state 61
    BREAK               shift, and go to state 62
    GOTO                shift, and go to state 63
    IF                  shift, and go to state 64
    CONTINUE            shift, and go to state 65
    WHILE               shift, and go to state 66
    IDENTIFIER          shift, and go to state 67
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_CURLY_BRACE    shift, and go to state 45
    SEMICOLON           shift, and go to state 71
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    compound_statement     go to state 82
    statement              go to state 146
    labeled_statement      go to state 86
    expression_statement   go to state 87
    conditional_statement  go to state 88
    iterative_statement    go to state 89
    break_statement        go to state 90
    continue_statement     go to state 91
    return_statement       go to state 92
    goto_statement         go to state 93
    named_label            go to state 94
    null_statement         go to state 95
    label                  go to state 96
    if_else_statement      go to state 97
    if_statement           go to state 98
    while_statement        go to state 99
    do_statement           go to state 100
    for_statement          go to state 101
    expr                   go to state 102
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 60

   44 for_statement: FOR . for_expr statement

    LEFT_PAREN  shift, and go to state 147

    for_expr  go to state 148


state 61

   34 return_statement: RETURN . expr SEMICOLON
   35                 | RETURN . SEMICOLON

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    SEMICOLON           shift, and go to state 149
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 150
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 62

   32 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 151


state 63

   36 goto_statement: GOTO . named_label SEMICOLON

    IDENTIFIER  shift, and go to state 152

    named_label  go to state 153


state 64

   40 if_else_statement: IF . LEFT_PAREN expr RIGHT_PAREN statement ELSE statement
   41 if_statement: IF . LEFT_PAREN expr RIGHT_PAREN statement

    LEFT_PAREN  shift, and go to state 154


state 65

   33 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 155


state 66

   42 while_statement: WHILE . LEFT_PAREN expr RIGHT_PAREN statement

    LEFT_PAREN  shift, and go to state 156


state 67

   37 named_label: IDENTIFIER .
  187 primary_expr: IDENTIFIER .

    COLON     reduce using rule 37 (named_label)
    $default  reduce using rule 187 (primary_expr)


state 68

  188 primary_expr: STRING_CONST .

    $default  reduce using rule 188 (primary_expr)


state 69

  189 primary_expr: INTEGER_CONST .

    $default  reduce using rule 189 (primary_expr)


state 70

    9 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 9 (compound_statement)


state 71

   38 null_statement: SEMICOLON .

    $default  reduce using rule 38 (null_statement)


state 72

  140 cast_expr: LEFT_PAREN . type_name RIGHT_PAREN cast_expr
  191 parenthesized_expr: LEFT_PAREN . expr RIGHT_PAREN

    SHORT               shift, and go to state 1
    SIGNED              shift, and go to state 2
    UNSIGNED            shift, and go to state 3
    CHAR                shift, and go to state 4
    VOID                shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                      go to state 157
    comma_expr                go to state 103
    assignment_expr           go to state 104
    conditional_expr          go to state 105
    logical_or_expr           go to state 106
    logical_and_expr          go to state 107
    bitwise_and_expr          go to state 108
    equality_expr             go to state 109
    relational_expr           go to state 110
    shift_expr                go to state 111
    additive_expr             go to state 112
    multiplicative_expr       go to state 113
    cast_expr                 go to state 114
    type_name                 go to state 158
    declaration_specifiers    go to state 159
    type_specifier            go to state 25
    integer_type_specifier    go to state 26
    signed_type_specifier     go to state 27
    character_type_specifier  go to state 28
    bitwise_or_expr           go to state 116
    bitwise_xor_expr          go to state 117
    unary_expr                go to state 118
    unary_minus_expr          go to state 119
    unary_plus_expr           go to state 120
    logical_negation_expr     go to state 121
    bitwise_negation_expr     go to state 122
    address_expr              go to state 123
    indirection_expr          go to state 124
    postfix_expr              go to state 125
    primary_expr              go to state 126
    parenthesized_expr        go to state 127
    subscript_expr            go to state 128
    predecrement_expr         go to state 129
    preincrement_expr         go to state 130
    function_call             go to state 131
    postdecrement_expr        go to state 132
    postincrement_expr        go to state 133
    unsigned_type_specifier   go to state 29
    void_type_specifier       go to state 30


state 73

  194 preincrement_expr: INCREMENT . unary_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 160
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    unary_expr             go to state 161
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 74

  193 predecrement_expr: DECREMENT . unary_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 160
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    unary_expr             go to state 162
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 75

  179 bitwise_negation_expr: BITWISE_COMPLEMENT . cast_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    cast_expr              go to state 163
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 76

  178 logical_negation_expr: LOGICAL_NOT . cast_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    cast_expr              go to state 164
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 77

  177 unary_plus_expr: PLUS . cast_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    cast_expr              go to state 165
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 78

  176 unary_minus_expr: DASH . cast_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    cast_expr              go to state 166
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 79

  180 address_expr: AMPERSAND . cast_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    cast_expr              go to state 167
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 80

  181 indirection_expr: STAR . cast_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    cast_expr              go to state 168
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 81

   12 declaration_or_statement: decl .

    $default  reduce using rule 12 (declaration_or_statement)


state 82

   16 statement: compound_statement .

    $default  reduce using rule 16 (statement)


state 83

    8 compound_statement: LEFT_CURLY_BRACE declaration_or_statement_list . RIGHT_CURLY_BRACE
   11 declaration_or_statement_list: declaration_or_statement_list . declaration_or_statement

    error               shift, and go to state 58
    DO                  shift, and go to state 59
    FOR                 shift, and go to state 60
    RETURN              shift, and go to state 61
    BREAK               shift, and go to state 62
    SHORT               shift, and go to state 1
    GOTO                shift, and go to state 63
    SIGNED              shift, and go to state 2
    UNSIGNED            shift, and go to state 3
    CHAR                shift, and go to state 4
    IF                  shift, and go to state 64
    VOID                shift, and go to state 5
    INT                 shift, and go to state 6
    CONTINUE            shift, and go to state 65
    LONG                shift, and go to state 7
    WHILE               shift, and go to state 66
    IDENTIFIER          shift, and go to state 67
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_CURLY_BRACE    shift, and go to state 45
    RIGHT_CURLY_BRACE   shift, and go to state 169
    SEMICOLON           shift, and go to state 71
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    decl                      go to state 81
    compound_statement        go to state 82
    declaration_or_statement  go to state 170
    statement                 go to state 85
    labeled_statement         go to state 86
    expression_statement      go to state 87
    conditional_statement     go to state 88
    iterative_statement       go to state 89
    break_statement           go to state 90
    continue_statement        go to state 91
    return_statement          go to state 92
    goto_statement            go to state 93
    named_label               go to state 94
    null_statement            go to state 95
    label                     go to state 96
    if_else_statement         go to state 97
    if_statement              go to state 98
    while_statement           go to state 99
    do_statement              go to state 100
    for_statement             go to state 101
    expr                      go to state 102
    comma_expr                go to state 103
    assignment_expr           go to state 104
    conditional_expr          go to state 105
    logical_or_expr           go to state 106
    logical_and_expr          go to state 107
    bitwise_and_expr          go to state 108
    equality_expr             go to state 109
    relational_expr           go to state 110
    shift_expr                go to state 111
    additive_expr             go to state 112
    multiplicative_expr       go to state 113
    cast_expr                 go to state 114
    declaration_specifiers    go to state 115
    type_specifier            go to state 25
    integer_type_specifier    go to state 26
    signed_type_specifier     go to state 27
    character_type_specifier  go to state 28
    bitwise_or_expr           go to state 116
    bitwise_xor_expr          go to state 117
    unary_expr                go to state 118
    unary_minus_expr          go to state 119
    unary_plus_expr           go to state 120
    logical_negation_expr     go to state 121
    bitwise_negation_expr     go to state 122
    address_expr              go to state 123
    indirection_expr          go to state 124
    postfix_expr              go to state 125
    primary_expr              go to state 126
    parenthesized_expr        go to state 127
    subscript_expr            go to state 128
    predecrement_expr         go to state 129
    preincrement_expr         go to state 130
    function_call             go to state 131
    postdecrement_expr        go to state 132
    postincrement_expr        go to state 133
    unsigned_type_specifier   go to state 29
    void_type_specifier       go to state 30


state 84

   10 declaration_or_statement_list: declaration_or_statement .

    $default  reduce using rule 10 (declaration_or_statement_list)


state 85

   13 declaration_or_statement: statement .

    $default  reduce using rule 13 (declaration_or_statement)


state 86

   15 statement: labeled_statement .

    $default  reduce using rule 15 (statement)


state 87

   14 statement: expression_statement .

    $default  reduce using rule 14 (statement)


state 88

   17 statement: conditional_statement .

    $default  reduce using rule 17 (statement)


state 89

   18 statement: iterative_statement .

    $default  reduce using rule 18 (statement)


state 90

   19 statement: break_statement .

    $default  reduce using rule 19 (statement)


state 91

   20 statement: continue_statement .

    $default  reduce using rule 20 (statement)


state 92

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


state 93

   22 statement: goto_statement .

    $default  reduce using rule 22 (statement)


state 94

   39 label: named_label .

    $default  reduce using rule 39 (label)


state 95

   23 statement: null_statement .

    $default  reduce using rule 23 (statement)


state 96

   25 labeled_statement: label . COLON statement

    COLON  shift, and go to state 171


state 97

   28 conditional_statement: if_else_statement .

    $default  reduce using rule 28 (conditional_statement)


state 98

   27 conditional_statement: if_statement .

    $default  reduce using rule 27 (conditional_statement)


state 99

   29 iterative_statement: while_statement .

    $default  reduce using rule 29 (iterative_statement)


state 100

   30 iterative_statement: do_statement .

    $default  reduce using rule 30 (iterative_statement)


state 101

   31 iterative_statement: for_statement .

    $default  reduce using rule 31 (iterative_statement)


state 102

   26 expression_statement: expr . SEMICOLON

    SEMICOLON  shift, and go to state 172


state 103

   92 expr: comma_expr .
   94 comma_expr: comma_expr . COMMA assignment_expr

    COMMA  shift, and go to state 173

    $default  reduce using rule 92 (expr)


state 104

   93 comma_expr: assignment_expr .

    $default  reduce using rule 93 (comma_expr)


state 105

   95 assignment_expr: conditional_expr .

    $default  reduce using rule 95 (assignment_expr)


state 106

  108 conditional_expr: logical_or_expr .
  109                 | logical_or_expr . QUESTION_MARK expr COLON conditional_expr
  111 logical_or_expr: logical_or_expr . LOGICAL_OR logical_and_expr

    LOGICAL_OR     shift, and go to state 174
    QUESTION_MARK  shift, and go to state 175

    $default  reduce using rule 108 (conditional_expr)


state 107

  110 logical_or_expr: logical_and_expr .
  113 logical_and_expr: logical_and_expr . LOGICAL_AND bitwise_or_expr

    LOGICAL_AND  shift, and go to state 176

    $default  reduce using rule 110 (logical_or_expr)


state 108

  115 bitwise_and_expr: bitwise_and_expr . AMPERSAND equality_expr
  165 bitwise_xor_expr: bitwise_and_expr .

    AMPERSAND  shift, and go to state 177

    $default  reduce using rule 165 (bitwise_xor_expr)


state 109

  114 bitwise_and_expr: equality_expr .
  117 equality_expr: equality_expr . equality_op relational_expr

    IS_EQUAL      shift, and go to state 178
    IS_NOT_EQUAL  shift, and go to state 179

    $default  reduce using rule 114 (bitwise_and_expr)

    equality_op  go to state 180


state 110

  116 equality_expr: relational_expr .
  121 relational_expr: relational_expr . relational_op shift_expr

    LESS_THAN              shift, and go to state 181
    GREATER_THAN           shift, and go to state 182
    LESS_THAN_OR_EQUAL     shift, and go to state 183
    GREATER_THAN_OR_EQUAL  shift, and go to state 184

    $default  reduce using rule 116 (equality_expr)

    relational_op  go to state 185


state 111

  120 relational_expr: shift_expr .
  127 shift_expr: shift_expr . shift_op additive_expr

    BITSHIFT_LEFT   shift, and go to state 186
    BITSHIFT_RIGHT  shift, and go to state 187

    $default  reduce using rule 120 (relational_expr)

    shift_op  go to state 188


state 112

  126 shift_expr: additive_expr .
  131 additive_expr: additive_expr . add_op multiplicative_expr

    PLUS  shift, and go to state 189
    DASH  shift, and go to state 190

    $default  reduce using rule 126 (shift_expr)

    add_op  go to state 191


state 113

  130 additive_expr: multiplicative_expr .
  135 multiplicative_expr: multiplicative_expr . mult_op cast_expr

    STAR       shift, and go to state 192
    SLASH      shift, and go to state 193
    REMAINDER  shift, and go to state 194

    $default  reduce using rule 130 (additive_expr)

    mult_op  go to state 195


state 114

  134 multiplicative_expr: cast_expr .

    $default  reduce using rule 134 (multiplicative_expr)


state 115

    6 decl: declaration_specifiers . initialized_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    STAR        shift, and go to state 10

    initialized_declarator       go to state 50
    declarator                   go to state 196
    pointer                      go to state 18
    pointer_decl                 go to state 19
    direct_declarator            go to state 20
    simple_declarator            go to state 21
    function_declarator          go to state 22
    array_declarator             go to state 23
    initialized_declarator_list  go to state 52


state 116

  112 logical_and_expr: bitwise_or_expr .
  164 bitwise_or_expr: bitwise_or_expr . BITWISE_OR bitwise_xor_expr

    BITWISE_OR  shift, and go to state 197

    $default  reduce using rule 112 (logical_and_expr)


state 117

  163 bitwise_or_expr: bitwise_xor_expr .
  166 bitwise_xor_expr: bitwise_xor_expr . BITWISE_XOR bitwise_and_expr

    BITWISE_XOR  shift, and go to state 198

    $default  reduce using rule 163 (bitwise_or_expr)


state 118

   96 assignment_expr: unary_expr . assignment_op assignment_expr
  139 cast_expr: unary_expr .

    ASSIGN                     shift, and go to state 199
    ADD_AND_ASSIGN             shift, and go to state 200
    SUBTRACT_AND_ASSIGN        shift, and go to state 201
    MULTIPLY_AND_ASSIGN        shift, and go to state 202
    DIVIDE_AND_ASSIGN          shift, and go to state 203
    REMAINDER_AND_ASSIGN       shift, and go to state 204
    BITWISE_AND_AND_ASSIGN     shift, and go to state 205
    BITWISE_OR_AND_ASSIGN      shift, and go to state 206
    BITWISE_XOR_AND_ASSIGN     shift, and go to state 207
    BITSHIFT_LEFT_AND_ASSIGN   shift, and go to state 208
    BITSHIFT_RIGHT_AND_ASSIGN  shift, and go to state 209

    $default  reduce using rule 139 (cast_expr)

    assignment_op  go to state 210


state 119

  168 unary_expr: unary_minus_expr .

    $default  reduce using rule 168 (unary_expr)


state 120

  169 unary_expr: unary_plus_expr .

    $default  reduce using rule 169 (unary_expr)


state 121

  170 unary_expr: logical_negation_expr .

    $default  reduce using rule 170 (unary_expr)


state 122

  171 unary_expr: bitwise_negation_expr .

    $default  reduce using rule 171 (unary_expr)


state 123

  172 unary_expr: address_expr .

    $default  reduce using rule 172 (unary_expr)


state 124

  173 unary_expr: indirection_expr .

    $default  reduce using rule 173 (unary_expr)


state 125

  167 unary_expr: postfix_expr .
  192 subscript_expr: postfix_expr . LEFT_BRACKET expr RIGHT_BRACKET
  195 function_call: postfix_expr . LEFT_PAREN expression_list RIGHT_PAREN
  196              | postfix_expr . LEFT_PAREN RIGHT_PAREN
  197 postdecrement_expr: postfix_expr . DECREMENT
  198 postincrement_expr: postfix_expr . INCREMENT

    LEFT_BRACKET  shift, and go to state 211
    LEFT_PAREN    shift, and go to state 212
    INCREMENT     shift, and go to state 213
    DECREMENT     shift, and go to state 214

    $default  reduce using rule 167 (unary_expr)


state 126

  182 postfix_expr: primary_expr .

    $default  reduce using rule 182 (postfix_expr)


state 127

  190 primary_expr: parenthesized_expr .

    $default  reduce using rule 190 (primary_expr)


state 128

  183 postfix_expr: subscript_expr .

    $default  reduce using rule 183 (postfix_expr)


state 129

  175 unary_expr: predecrement_expr .

    $default  reduce using rule 175 (unary_expr)


state 130

  174 unary_expr: preincrement_expr .

    $default  reduce using rule 174 (unary_expr)


state 131

  184 postfix_expr: function_call .

    $default  reduce using rule 184 (postfix_expr)


state 132

  186 postfix_expr: postdecrement_expr .

    $default  reduce using rule 186 (postfix_expr)


state 133

  185 postfix_expr: postincrement_expr .

    $default  reduce using rule 185 (postfix_expr)


state 134

  187 primary_expr: IDENTIFIER .

    $default  reduce using rule 187 (primary_expr)


state 135

   87 array_declarator: direct_declarator LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 87 (array_declarator)


state 136

   86 array_declarator: direct_declarator LEFT_BRACKET constant_expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 215


state 137

   82 constant_expr: conditional_expr .

    $default  reduce using rule 82 (constant_expr)


state 138

  139 cast_expr: unary_expr .

    $default  reduce using rule 139 (cast_expr)


state 139

   83 parameter_list: parameter_decl .

    $default  reduce using rule 83 (parameter_list)


state 140

   84 parameter_list: parameter_list . COMMA parameter_decl
   85 parameter_type_list: parameter_list .

    COMMA  shift, and go to state 216

    $default  reduce using rule 85 (parameter_type_list)


state 141

   68 function_declarator: direct_declarator LEFT_PAREN parameter_type_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 217


state 142

   69 parameter_decl: declaration_specifiers . declarator
   70               | declaration_specifiers . abstract_declarator
   71               | declaration_specifiers .

    IDENTIFIER    shift, and go to state 8
    LEFT_BRACKET  shift, and go to state 218
    LEFT_PAREN    shift, and go to state 219
    STAR          shift, and go to state 10

    $default  reduce using rule 71 (parameter_decl)

    declarator                  go to state 220
    pointer                     go to state 221
    pointer_decl                go to state 19
    direct_declarator           go to state 20
    simple_declarator           go to state 21
    function_declarator         go to state 22
    abstract_declarator         go to state 222
    direct_abstract_declarator  go to state 223
    array_declarator            go to state 23


state 143

   89 initialized_declarator_list: initialized_declarator_list COMMA . initialized_declarator

    IDENTIFIER  shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    STAR        shift, and go to state 10

    initialized_declarator  go to state 224
    declarator              go to state 196
    pointer                 go to state 18
    pointer_decl            go to state 19
    direct_declarator       go to state 20
    simple_declarator       go to state 21
    function_declarator     go to state 22
    array_declarator        go to state 23


state 144

    6 decl: declaration_specifiers initialized_declarator_list SEMICOLON .

    $default  reduce using rule 6 (decl)


state 145

   24 statement: error SEMICOLON .

    $default  reduce using rule 24 (statement)


state 146

   43 do_statement: DO statement . WHILE LEFT_PAREN expr RIGHT_PAREN SEMICOLON

    WHILE  shift, and go to state 225


state 147

   45 for_expr: LEFT_PAREN . initial_clause SEMICOLON expr SEMICOLON expr RIGHT_PAREN
   46         | LEFT_PAREN . SEMICOLON expr SEMICOLON expr RIGHT_PAREN
   47         | LEFT_PAREN . initial_clause SEMICOLON SEMICOLON expr RIGHT_PAREN
   48         | LEFT_PAREN . initial_clause SEMICOLON expr SEMICOLON RIGHT_PAREN
   49         | LEFT_PAREN . initial_clause SEMICOLON SEMICOLON RIGHT_PAREN
   50         | LEFT_PAREN . SEMICOLON expr SEMICOLON RIGHT_PAREN
   51         | LEFT_PAREN . SEMICOLON SEMICOLON expr RIGHT_PAREN
   52         | LEFT_PAREN . SEMICOLON SEMICOLON RIGHT_PAREN

    SHORT               shift, and go to state 1
    SIGNED              shift, and go to state 2
    UNSIGNED            shift, and go to state 3
    CHAR                shift, and go to state 4
    VOID                shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    SEMICOLON           shift, and go to state 226
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    decl                      go to state 227
    initial_clause            go to state 228
    expr                      go to state 229
    comma_expr                go to state 103
    assignment_expr           go to state 104
    conditional_expr          go to state 105
    logical_or_expr           go to state 106
    logical_and_expr          go to state 107
    bitwise_and_expr          go to state 108
    equality_expr             go to state 109
    relational_expr           go to state 110
    shift_expr                go to state 111
    additive_expr             go to state 112
    multiplicative_expr       go to state 113
    cast_expr                 go to state 114
    declaration_specifiers    go to state 115
    type_specifier            go to state 25
    integer_type_specifier    go to state 26
    signed_type_specifier     go to state 27
    character_type_specifier  go to state 28
    bitwise_or_expr           go to state 116
    bitwise_xor_expr          go to state 117
    unary_expr                go to state 118
    unary_minus_expr          go to state 119
    unary_plus_expr           go to state 120
    logical_negation_expr     go to state 121
    bitwise_negation_expr     go to state 122
    address_expr              go to state 123
    indirection_expr          go to state 124
    postfix_expr              go to state 125
    primary_expr              go to state 126
    parenthesized_expr        go to state 127
    subscript_expr            go to state 128
    predecrement_expr         go to state 129
    preincrement_expr         go to state 130
    function_call             go to state 131
    postdecrement_expr        go to state 132
    postincrement_expr        go to state 133
    unsigned_type_specifier   go to state 29
    void_type_specifier       go to state 30


state 148

   44 for_statement: FOR for_expr . statement

    error               shift, and go to state 58
    DO                  shift, and go to state 59
    FOR                 shift, and go to state 60
    RETURN              shift, and go to state 61
    BREAK               shift, and go to state 62
    GOTO                shift, and go to state 63
    IF                  shift, and go to state 64
    CONTINUE            shift, and go to state 65
    WHILE               shift, and go to state 66
    IDENTIFIER          shift, and go to state 67
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_CURLY_BRACE    shift, and go to state 45
    SEMICOLON           shift, and go to state 71
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    compound_statement     go to state 82
    statement              go to state 230
    labeled_statement      go to state 86
    expression_statement   go to state 87
    conditional_statement  go to state 88
    iterative_statement    go to state 89
    break_statement        go to state 90
    continue_statement     go to state 91
    return_statement       go to state 92
    goto_statement         go to state 93
    named_label            go to state 94
    null_statement         go to state 95
    label                  go to state 96
    if_else_statement      go to state 97
    if_statement           go to state 98
    while_statement        go to state 99
    do_statement           go to state 100
    for_statement          go to state 101
    expr                   go to state 102
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 149

   35 return_statement: RETURN SEMICOLON .

    $default  reduce using rule 35 (return_statement)


state 150

   34 return_statement: RETURN expr . SEMICOLON

    SEMICOLON  shift, and go to state 231


state 151

   32 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 32 (break_statement)


state 152

   37 named_label: IDENTIFIER .

    $default  reduce using rule 37 (named_label)


state 153

   36 goto_statement: GOTO named_label . SEMICOLON

    SEMICOLON  shift, and go to state 232


state 154

   40 if_else_statement: IF LEFT_PAREN . expr RIGHT_PAREN statement ELSE statement
   41 if_statement: IF LEFT_PAREN . expr RIGHT_PAREN statement

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 233
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 155

   33 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 33 (continue_statement)


state 156

   42 while_statement: WHILE LEFT_PAREN . expr RIGHT_PAREN statement

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 234
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 157

  191 parenthesized_expr: LEFT_PAREN expr . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 235


state 158

  140 cast_expr: LEFT_PAREN type_name . RIGHT_PAREN cast_expr

    RIGHT_PAREN  shift, and go to state 236


state 159

  141 type_name: declaration_specifiers . abstract_declarator
  142          | declaration_specifiers .

    LEFT_BRACKET  shift, and go to state 218
    LEFT_PAREN    shift, and go to state 237
    STAR          shift, and go to state 10

    $default  reduce using rule 142 (type_name)

    pointer                     go to state 238
    abstract_declarator         go to state 239
    direct_abstract_declarator  go to state 223


state 160

  191 parenthesized_expr: LEFT_PAREN . expr RIGHT_PAREN

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 157
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 161

  194 preincrement_expr: INCREMENT unary_expr .

    $default  reduce using rule 194 (preincrement_expr)


state 162

  193 predecrement_expr: DECREMENT unary_expr .

    $default  reduce using rule 193 (predecrement_expr)


state 163

  179 bitwise_negation_expr: BITWISE_COMPLEMENT cast_expr .

    $default  reduce using rule 179 (bitwise_negation_expr)


state 164

  178 logical_negation_expr: LOGICAL_NOT cast_expr .

    $default  reduce using rule 178 (logical_negation_expr)


state 165

  177 unary_plus_expr: PLUS cast_expr .

    $default  reduce using rule 177 (unary_plus_expr)


state 166

  176 unary_minus_expr: DASH cast_expr .

    $default  reduce using rule 176 (unary_minus_expr)


state 167

  180 address_expr: AMPERSAND cast_expr .

    $default  reduce using rule 180 (address_expr)


state 168

  181 indirection_expr: STAR cast_expr .

    $default  reduce using rule 181 (indirection_expr)


state 169

    8 compound_statement: LEFT_CURLY_BRACE declaration_or_statement_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 8 (compound_statement)


state 170

   11 declaration_or_statement_list: declaration_or_statement_list declaration_or_statement .

    $default  reduce using rule 11 (declaration_or_statement_list)


state 171

   25 labeled_statement: label COLON . statement

    error               shift, and go to state 58
    DO                  shift, and go to state 59
    FOR                 shift, and go to state 60
    RETURN              shift, and go to state 61
    BREAK               shift, and go to state 62
    GOTO                shift, and go to state 63
    IF                  shift, and go to state 64
    CONTINUE            shift, and go to state 65
    WHILE               shift, and go to state 66
    IDENTIFIER          shift, and go to state 67
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_CURLY_BRACE    shift, and go to state 45
    SEMICOLON           shift, and go to state 71
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    compound_statement     go to state 82
    statement              go to state 240
    labeled_statement      go to state 86
    expression_statement   go to state 87
    conditional_statement  go to state 88
    iterative_statement    go to state 89
    break_statement        go to state 90
    continue_statement     go to state 91
    return_statement       go to state 92
    goto_statement         go to state 93
    named_label            go to state 94
    null_statement         go to state 95
    label                  go to state 96
    if_else_statement      go to state 97
    if_statement           go to state 98
    while_statement        go to state 99
    do_statement           go to state 100
    for_statement          go to state 101
    expr                   go to state 102
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 172

   26 expression_statement: expr SEMICOLON .

    $default  reduce using rule 26 (expression_statement)


state 173

   94 comma_expr: comma_expr COMMA . assignment_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    assignment_expr        go to state 241
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 174

  111 logical_or_expr: logical_or_expr LOGICAL_OR . logical_and_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    logical_and_expr       go to state 242
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 175

  109 conditional_expr: logical_or_expr QUESTION_MARK . expr COLON conditional_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 243
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 176

  113 logical_and_expr: logical_and_expr LOGICAL_AND . bitwise_or_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 244
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 177

  115 bitwise_and_expr: bitwise_and_expr AMPERSAND . equality_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    equality_expr          go to state 245
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 178

  118 equality_op: IS_EQUAL .

    $default  reduce using rule 118 (equality_op)


state 179

  119 equality_op: IS_NOT_EQUAL .

    $default  reduce using rule 119 (equality_op)


state 180

  117 equality_expr: equality_expr equality_op . relational_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    relational_expr        go to state 246
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 181

  122 relational_op: LESS_THAN .

    $default  reduce using rule 122 (relational_op)


state 182

  124 relational_op: GREATER_THAN .

    $default  reduce using rule 124 (relational_op)


state 183

  123 relational_op: LESS_THAN_OR_EQUAL .

    $default  reduce using rule 123 (relational_op)


state 184

  125 relational_op: GREATER_THAN_OR_EQUAL .

    $default  reduce using rule 125 (relational_op)


state 185

  121 relational_expr: relational_expr relational_op . shift_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    shift_expr             go to state 247
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 186

  129 shift_op: BITSHIFT_LEFT .

    $default  reduce using rule 129 (shift_op)


state 187

  128 shift_op: BITSHIFT_RIGHT .

    $default  reduce using rule 128 (shift_op)


state 188

  127 shift_expr: shift_expr shift_op . additive_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    additive_expr          go to state 248
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 189

  132 add_op: PLUS .

    $default  reduce using rule 132 (add_op)


state 190

  133 add_op: DASH .

    $default  reduce using rule 133 (add_op)


state 191

  131 additive_expr: additive_expr add_op . multiplicative_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    multiplicative_expr    go to state 249
    cast_expr              go to state 114
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 192

  136 mult_op: STAR .

    $default  reduce using rule 136 (mult_op)


state 193

  137 mult_op: SLASH .

    $default  reduce using rule 137 (mult_op)


state 194

  138 mult_op: REMAINDER .

    $default  reduce using rule 138 (mult_op)


state 195

  135 multiplicative_expr: multiplicative_expr mult_op . cast_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    cast_expr              go to state 250
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 196

   57 initialized_declarator: declarator .

    $default  reduce using rule 57 (initialized_declarator)


state 197

  164 bitwise_or_expr: bitwise_or_expr BITWISE_OR . bitwise_xor_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_xor_expr       go to state 251
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 198

  166 bitwise_xor_expr: bitwise_xor_expr BITWISE_XOR . bitwise_and_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    bitwise_and_expr       go to state 252
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 199

   97 assignment_op: ASSIGN .

    $default  reduce using rule 97 (assignment_op)


state 200

   98 assignment_op: ADD_AND_ASSIGN .

    $default  reduce using rule 98 (assignment_op)


state 201

   99 assignment_op: SUBTRACT_AND_ASSIGN .

    $default  reduce using rule 99 (assignment_op)


state 202

  100 assignment_op: MULTIPLY_AND_ASSIGN .

    $default  reduce using rule 100 (assignment_op)


state 203

  101 assignment_op: DIVIDE_AND_ASSIGN .

    $default  reduce using rule 101 (assignment_op)


state 204

  102 assignment_op: REMAINDER_AND_ASSIGN .

    $default  reduce using rule 102 (assignment_op)


state 205

  105 assignment_op: BITWISE_AND_AND_ASSIGN .

    $default  reduce using rule 105 (assignment_op)


state 206

  106 assignment_op: BITWISE_OR_AND_ASSIGN .

    $default  reduce using rule 106 (assignment_op)


state 207

  107 assignment_op: BITWISE_XOR_AND_ASSIGN .

    $default  reduce using rule 107 (assignment_op)


state 208

  103 assignment_op: BITSHIFT_LEFT_AND_ASSIGN .

    $default  reduce using rule 103 (assignment_op)


state 209

  104 assignment_op: BITSHIFT_RIGHT_AND_ASSIGN .

    $default  reduce using rule 104 (assignment_op)


state 210

   96 assignment_expr: unary_expr assignment_op . assignment_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    assignment_expr        go to state 253
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 211

  192 subscript_expr: postfix_expr LEFT_BRACKET . expr RIGHT_BRACKET

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 254
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 212

  195 function_call: postfix_expr LEFT_PAREN . expression_list RIGHT_PAREN
  196              | postfix_expr LEFT_PAREN . RIGHT_PAREN

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    RIGHT_PAREN         shift, and go to state 255
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expression_list        go to state 256
    assignment_expr        go to state 257
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 213

  198 postincrement_expr: postfix_expr INCREMENT .

    $default  reduce using rule 198 (postincrement_expr)


state 214

  197 postdecrement_expr: postfix_expr DECREMENT .

    $default  reduce using rule 197 (postdecrement_expr)


state 215

   86 array_declarator: direct_declarator LEFT_BRACKET constant_expr RIGHT_BRACKET .

    $default  reduce using rule 86 (array_declarator)


state 216

   84 parameter_list: parameter_list COMMA . parameter_decl

    SHORT     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    CHAR      shift, and go to state 4
    VOID      shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7

    parameter_decl            go to state 258
    declaration_specifiers    go to state 142
    type_specifier            go to state 25
    integer_type_specifier    go to state 26
    signed_type_specifier     go to state 27
    character_type_specifier  go to state 28
    unsigned_type_specifier   go to state 29
    void_type_specifier       go to state 30


state 217

   68 function_declarator: direct_declarator LEFT_PAREN parameter_type_list RIGHT_PAREN .

    $default  reduce using rule 68 (function_declarator)


state 218

   77 direct_abstract_declarator: LEFT_BRACKET . constant_expr RIGHT_BRACKET

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    constant_expr          go to state 259
    conditional_expr       go to state 137
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 219

   64 direct_declarator: LEFT_PAREN . declarator RIGHT_PAREN
   75 direct_abstract_declarator: LEFT_PAREN . abstract_declarator RIGHT_PAREN
   80                           | LEFT_PAREN . parameter_type_list RIGHT_PAREN

    SHORT         shift, and go to state 1
    SIGNED        shift, and go to state 2
    UNSIGNED      shift, and go to state 3
    CHAR          shift, and go to state 4
    VOID          shift, and go to state 5
    INT           shift, and go to state 6
    LONG          shift, and go to state 7
    IDENTIFIER    shift, and go to state 8
    LEFT_BRACKET  shift, and go to state 218
    LEFT_PAREN    shift, and go to state 219
    STAR          shift, and go to state 10

    declarator                  go to state 41
    pointer                     go to state 221
    pointer_decl                go to state 19
    direct_declarator           go to state 20
    simple_declarator           go to state 21
    function_declarator         go to state 22
    parameter_decl              go to state 139
    abstract_declarator         go to state 260
    direct_abstract_declarator  go to state 223
    parameter_list              go to state 140
    parameter_type_list         go to state 261
    array_declarator            go to state 23
    declaration_specifiers      go to state 142
    type_specifier              go to state 25
    integer_type_specifier      go to state 26
    signed_type_specifier       go to state 27
    character_type_specifier    go to state 28
    unsigned_type_specifier     go to state 29
    void_type_specifier         go to state 30


state 220

   69 parameter_decl: declaration_specifiers declarator .

    $default  reduce using rule 69 (parameter_decl)


state 221

   62 pointer_decl: pointer . direct_declarator
   72 abstract_declarator: pointer .
   73                    | pointer . direct_abstract_declarator

    IDENTIFIER    shift, and go to state 8
    LEFT_BRACKET  shift, and go to state 218
    LEFT_PAREN    shift, and go to state 219

    $default  reduce using rule 72 (abstract_declarator)

    direct_declarator           go to state 47
    simple_declarator           go to state 21
    function_declarator         go to state 22
    direct_abstract_declarator  go to state 262
    array_declarator            go to state 23


state 222

   70 parameter_decl: declaration_specifiers abstract_declarator .

    $default  reduce using rule 70 (parameter_decl)


state 223

   74 abstract_declarator: direct_abstract_declarator .
   76 direct_abstract_declarator: direct_abstract_declarator . LEFT_BRACKET constant_expr RIGHT_BRACKET
   78                           | direct_abstract_declarator . LEFT_BRACKET RIGHT_BRACKET
   79                           | direct_abstract_declarator . LEFT_PAREN parameter_type_list RIGHT_PAREN
   81                           | direct_abstract_declarator . LEFT_PAREN RIGHT_PAREN

    LEFT_BRACKET  shift, and go to state 263
    LEFT_PAREN    shift, and go to state 264

    $default  reduce using rule 74 (abstract_declarator)


state 224

   89 initialized_declarator_list: initialized_declarator_list COMMA initialized_declarator .

    $default  reduce using rule 89 (initialized_declarator_list)


state 225

   43 do_statement: DO statement WHILE . LEFT_PAREN expr RIGHT_PAREN SEMICOLON

    LEFT_PAREN  shift, and go to state 265


state 226

   46 for_expr: LEFT_PAREN SEMICOLON . expr SEMICOLON expr RIGHT_PAREN
   50         | LEFT_PAREN SEMICOLON . expr SEMICOLON RIGHT_PAREN
   51         | LEFT_PAREN SEMICOLON . SEMICOLON expr RIGHT_PAREN
   52         | LEFT_PAREN SEMICOLON . SEMICOLON RIGHT_PAREN

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    SEMICOLON           shift, and go to state 266
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 267
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 227

   54 initial_clause: decl .

    $default  reduce using rule 54 (initial_clause)


state 228

   45 for_expr: LEFT_PAREN initial_clause . SEMICOLON expr SEMICOLON expr RIGHT_PAREN
   47         | LEFT_PAREN initial_clause . SEMICOLON SEMICOLON expr RIGHT_PAREN
   48         | LEFT_PAREN initial_clause . SEMICOLON expr SEMICOLON RIGHT_PAREN
   49         | LEFT_PAREN initial_clause . SEMICOLON SEMICOLON RIGHT_PAREN

    SEMICOLON  shift, and go to state 268


state 229

   53 initial_clause: expr .

    $default  reduce using rule 53 (initial_clause)


state 230

   44 for_statement: FOR for_expr statement .

    $default  reduce using rule 44 (for_statement)


state 231

   34 return_statement: RETURN expr SEMICOLON .

    $default  reduce using rule 34 (return_statement)


state 232

   36 goto_statement: GOTO named_label SEMICOLON .

    $default  reduce using rule 36 (goto_statement)


state 233

   40 if_else_statement: IF LEFT_PAREN expr . RIGHT_PAREN statement ELSE statement
   41 if_statement: IF LEFT_PAREN expr . RIGHT_PAREN statement

    RIGHT_PAREN  shift, and go to state 269


state 234

   42 while_statement: WHILE LEFT_PAREN expr . RIGHT_PAREN statement

    RIGHT_PAREN  shift, and go to state 270


state 235

  191 parenthesized_expr: LEFT_PAREN expr RIGHT_PAREN .

    $default  reduce using rule 191 (parenthesized_expr)


state 236

  140 cast_expr: LEFT_PAREN type_name RIGHT_PAREN . cast_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    cast_expr              go to state 271
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 237

   75 direct_abstract_declarator: LEFT_PAREN . abstract_declarator RIGHT_PAREN
   80                           | LEFT_PAREN . parameter_type_list RIGHT_PAREN

    SHORT         shift, and go to state 1
    SIGNED        shift, and go to state 2
    UNSIGNED      shift, and go to state 3
    CHAR          shift, and go to state 4
    VOID          shift, and go to state 5
    INT           shift, and go to state 6
    LONG          shift, and go to state 7
    LEFT_BRACKET  shift, and go to state 218
    LEFT_PAREN    shift, and go to state 237
    STAR          shift, and go to state 10

    pointer                     go to state 238
    parameter_decl              go to state 139
    abstract_declarator         go to state 260
    direct_abstract_declarator  go to state 223
    parameter_list              go to state 140
    parameter_type_list         go to state 261
    declaration_specifiers      go to state 142
    type_specifier              go to state 25
    integer_type_specifier      go to state 26
    signed_type_specifier       go to state 27
    character_type_specifier    go to state 28
    unsigned_type_specifier     go to state 29
    void_type_specifier         go to state 30


state 238

   72 abstract_declarator: pointer .
   73                    | pointer . direct_abstract_declarator

    LEFT_BRACKET  shift, and go to state 218
    LEFT_PAREN    shift, and go to state 237

    $default  reduce using rule 72 (abstract_declarator)

    direct_abstract_declarator  go to state 262


state 239

  141 type_name: declaration_specifiers abstract_declarator .

    $default  reduce using rule 141 (type_name)


state 240

   25 labeled_statement: label COLON statement .

    $default  reduce using rule 25 (labeled_statement)


state 241

   94 comma_expr: comma_expr COMMA assignment_expr .

    $default  reduce using rule 94 (comma_expr)


state 242

  111 logical_or_expr: logical_or_expr LOGICAL_OR logical_and_expr .
  113 logical_and_expr: logical_and_expr . LOGICAL_AND bitwise_or_expr

    LOGICAL_AND  shift, and go to state 176

    $default  reduce using rule 111 (logical_or_expr)


state 243

  109 conditional_expr: logical_or_expr QUESTION_MARK expr . COLON conditional_expr

    COLON  shift, and go to state 272


state 244

  113 logical_and_expr: logical_and_expr LOGICAL_AND bitwise_or_expr .
  164 bitwise_or_expr: bitwise_or_expr . BITWISE_OR bitwise_xor_expr

    BITWISE_OR  shift, and go to state 197

    $default  reduce using rule 113 (logical_and_expr)


state 245

  115 bitwise_and_expr: bitwise_and_expr AMPERSAND equality_expr .
  117 equality_expr: equality_expr . equality_op relational_expr

    IS_EQUAL      shift, and go to state 178
    IS_NOT_EQUAL  shift, and go to state 179

    $default  reduce using rule 115 (bitwise_and_expr)

    equality_op  go to state 180


state 246

  117 equality_expr: equality_expr equality_op relational_expr .
  121 relational_expr: relational_expr . relational_op shift_expr

    LESS_THAN              shift, and go to state 181
    GREATER_THAN           shift, and go to state 182
    LESS_THAN_OR_EQUAL     shift, and go to state 183
    GREATER_THAN_OR_EQUAL  shift, and go to state 184

    $default  reduce using rule 117 (equality_expr)

    relational_op  go to state 185


state 247

  121 relational_expr: relational_expr relational_op shift_expr .
  127 shift_expr: shift_expr . shift_op additive_expr

    BITSHIFT_LEFT   shift, and go to state 186
    BITSHIFT_RIGHT  shift, and go to state 187

    $default  reduce using rule 121 (relational_expr)

    shift_op  go to state 188


state 248

  127 shift_expr: shift_expr shift_op additive_expr .
  131 additive_expr: additive_expr . add_op multiplicative_expr

    PLUS  shift, and go to state 189
    DASH  shift, and go to state 190

    $default  reduce using rule 127 (shift_expr)

    add_op  go to state 191


state 249

  131 additive_expr: additive_expr add_op multiplicative_expr .
  135 multiplicative_expr: multiplicative_expr . mult_op cast_expr

    STAR       shift, and go to state 192
    SLASH      shift, and go to state 193
    REMAINDER  shift, and go to state 194

    $default  reduce using rule 131 (additive_expr)

    mult_op  go to state 195


state 250

  135 multiplicative_expr: multiplicative_expr mult_op cast_expr .

    $default  reduce using rule 135 (multiplicative_expr)


state 251

  164 bitwise_or_expr: bitwise_or_expr BITWISE_OR bitwise_xor_expr .
  166 bitwise_xor_expr: bitwise_xor_expr . BITWISE_XOR bitwise_and_expr

    BITWISE_XOR  shift, and go to state 198

    $default  reduce using rule 164 (bitwise_or_expr)


state 252

  115 bitwise_and_expr: bitwise_and_expr . AMPERSAND equality_expr
  166 bitwise_xor_expr: bitwise_xor_expr BITWISE_XOR bitwise_and_expr .

    AMPERSAND  shift, and go to state 177

    $default  reduce using rule 166 (bitwise_xor_expr)


state 253

   96 assignment_expr: unary_expr assignment_op assignment_expr .

    $default  reduce using rule 96 (assignment_expr)


state 254

  192 subscript_expr: postfix_expr LEFT_BRACKET expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 273


state 255

  196 function_call: postfix_expr LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 196 (function_call)


state 256

   91 expression_list: expression_list . COMMA assignment_expr
  195 function_call: postfix_expr LEFT_PAREN expression_list . RIGHT_PAREN

    COMMA        shift, and go to state 274
    RIGHT_PAREN  shift, and go to state 275


state 257

   90 expression_list: assignment_expr .

    $default  reduce using rule 90 (expression_list)


state 258

   84 parameter_list: parameter_list COMMA parameter_decl .

    $default  reduce using rule 84 (parameter_list)


state 259

   77 direct_abstract_declarator: LEFT_BRACKET constant_expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 276


state 260

   75 direct_abstract_declarator: LEFT_PAREN abstract_declarator . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 277


state 261

   80 direct_abstract_declarator: LEFT_PAREN parameter_type_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 278


state 262

   73 abstract_declarator: pointer direct_abstract_declarator .
   76 direct_abstract_declarator: direct_abstract_declarator . LEFT_BRACKET constant_expr RIGHT_BRACKET
   78                           | direct_abstract_declarator . LEFT_BRACKET RIGHT_BRACKET
   79                           | direct_abstract_declarator . LEFT_PAREN parameter_type_list RIGHT_PAREN
   81                           | direct_abstract_declarator . LEFT_PAREN RIGHT_PAREN

    LEFT_BRACKET  shift, and go to state 263
    LEFT_PAREN    shift, and go to state 264

    $default  reduce using rule 73 (abstract_declarator)


state 263

   76 direct_abstract_declarator: direct_abstract_declarator LEFT_BRACKET . constant_expr RIGHT_BRACKET
   78                           | direct_abstract_declarator LEFT_BRACKET . RIGHT_BRACKET

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    RIGHT_BRACKET       shift, and go to state 279
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    constant_expr          go to state 280
    conditional_expr       go to state 137
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 264

   79 direct_abstract_declarator: direct_abstract_declarator LEFT_PAREN . parameter_type_list RIGHT_PAREN
   81                           | direct_abstract_declarator LEFT_PAREN . RIGHT_PAREN

    SHORT        shift, and go to state 1
    SIGNED       shift, and go to state 2
    UNSIGNED     shift, and go to state 3
    CHAR         shift, and go to state 4
    VOID         shift, and go to state 5
    INT          shift, and go to state 6
    LONG         shift, and go to state 7
    RIGHT_PAREN  shift, and go to state 281

    parameter_decl            go to state 139
    parameter_list            go to state 140
    parameter_type_list       go to state 282
    declaration_specifiers    go to state 142
    type_specifier            go to state 25
    integer_type_specifier    go to state 26
    signed_type_specifier     go to state 27
    character_type_specifier  go to state 28
    unsigned_type_specifier   go to state 29
    void_type_specifier       go to state 30


state 265

   43 do_statement: DO statement WHILE LEFT_PAREN . expr RIGHT_PAREN SEMICOLON

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 283
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 266

   51 for_expr: LEFT_PAREN SEMICOLON SEMICOLON . expr RIGHT_PAREN
   52         | LEFT_PAREN SEMICOLON SEMICOLON . RIGHT_PAREN

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    RIGHT_PAREN         shift, and go to state 284
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 285
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 267

   46 for_expr: LEFT_PAREN SEMICOLON expr . SEMICOLON expr RIGHT_PAREN
   50         | LEFT_PAREN SEMICOLON expr . SEMICOLON RIGHT_PAREN

    SEMICOLON  shift, and go to state 286


state 268

   45 for_expr: LEFT_PAREN initial_clause SEMICOLON . expr SEMICOLON expr RIGHT_PAREN
   47         | LEFT_PAREN initial_clause SEMICOLON . SEMICOLON expr RIGHT_PAREN
   48         | LEFT_PAREN initial_clause SEMICOLON . expr SEMICOLON RIGHT_PAREN
   49         | LEFT_PAREN initial_clause SEMICOLON . SEMICOLON RIGHT_PAREN

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    SEMICOLON           shift, and go to state 287
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 288
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 269

   40 if_else_statement: IF LEFT_PAREN expr RIGHT_PAREN . statement ELSE statement
   41 if_statement: IF LEFT_PAREN expr RIGHT_PAREN . statement

    error               shift, and go to state 58
    DO                  shift, and go to state 59
    FOR                 shift, and go to state 60
    RETURN              shift, and go to state 61
    BREAK               shift, and go to state 62
    GOTO                shift, and go to state 63
    IF                  shift, and go to state 64
    CONTINUE            shift, and go to state 65
    WHILE               shift, and go to state 66
    IDENTIFIER          shift, and go to state 67
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_CURLY_BRACE    shift, and go to state 45
    SEMICOLON           shift, and go to state 71
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    compound_statement     go to state 82
    statement              go to state 289
    labeled_statement      go to state 86
    expression_statement   go to state 87
    conditional_statement  go to state 88
    iterative_statement    go to state 89
    break_statement        go to state 90
    continue_statement     go to state 91
    return_statement       go to state 92
    goto_statement         go to state 93
    named_label            go to state 94
    null_statement         go to state 95
    label                  go to state 96
    if_else_statement      go to state 97
    if_statement           go to state 98
    while_statement        go to state 99
    do_statement           go to state 100
    for_statement          go to state 101
    expr                   go to state 102
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 270

   42 while_statement: WHILE LEFT_PAREN expr RIGHT_PAREN . statement

    error               shift, and go to state 58
    DO                  shift, and go to state 59
    FOR                 shift, and go to state 60
    RETURN              shift, and go to state 61
    BREAK               shift, and go to state 62
    GOTO                shift, and go to state 63
    IF                  shift, and go to state 64
    CONTINUE            shift, and go to state 65
    WHILE               shift, and go to state 66
    IDENTIFIER          shift, and go to state 67
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_CURLY_BRACE    shift, and go to state 45
    SEMICOLON           shift, and go to state 71
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    compound_statement     go to state 82
    statement              go to state 290
    labeled_statement      go to state 86
    expression_statement   go to state 87
    conditional_statement  go to state 88
    iterative_statement    go to state 89
    break_statement        go to state 90
    continue_statement     go to state 91
    return_statement       go to state 92
    goto_statement         go to state 93
    named_label            go to state 94
    null_statement         go to state 95
    label                  go to state 96
    if_else_statement      go to state 97
    if_statement           go to state 98
    while_statement        go to state 99
    do_statement           go to state 100
    for_statement          go to state 101
    expr                   go to state 102
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 271

  140 cast_expr: LEFT_PAREN type_name RIGHT_PAREN cast_expr .

    $default  reduce using rule 140 (cast_expr)


state 272

  109 conditional_expr: logical_or_expr QUESTION_MARK expr COLON . conditional_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    conditional_expr       go to state 291
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 138
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 273

  192 subscript_expr: postfix_expr LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 192 (subscript_expr)


state 274

   91 expression_list: expression_list COMMA . assignment_expr

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    assignment_expr        go to state 292
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 275

  195 function_call: postfix_expr LEFT_PAREN expression_list RIGHT_PAREN .

    $default  reduce using rule 195 (function_call)


state 276

   77 direct_abstract_declarator: LEFT_BRACKET constant_expr RIGHT_BRACKET .

    $default  reduce using rule 77 (direct_abstract_declarator)


state 277

   75 direct_abstract_declarator: LEFT_PAREN abstract_declarator RIGHT_PAREN .

    $default  reduce using rule 75 (direct_abstract_declarator)


state 278

   80 direct_abstract_declarator: LEFT_PAREN parameter_type_list RIGHT_PAREN .

    $default  reduce using rule 80 (direct_abstract_declarator)


state 279

   78 direct_abstract_declarator: direct_abstract_declarator LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 78 (direct_abstract_declarator)


state 280

   76 direct_abstract_declarator: direct_abstract_declarator LEFT_BRACKET constant_expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 293


state 281

   81 direct_abstract_declarator: direct_abstract_declarator LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 81 (direct_abstract_declarator)


state 282

   79 direct_abstract_declarator: direct_abstract_declarator LEFT_PAREN parameter_type_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 294


state 283

   43 do_statement: DO statement WHILE LEFT_PAREN expr . RIGHT_PAREN SEMICOLON

    RIGHT_PAREN  shift, and go to state 295


state 284

   52 for_expr: LEFT_PAREN SEMICOLON SEMICOLON RIGHT_PAREN .

    $default  reduce using rule 52 (for_expr)


state 285

   51 for_expr: LEFT_PAREN SEMICOLON SEMICOLON expr . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 296


state 286

   46 for_expr: LEFT_PAREN SEMICOLON expr SEMICOLON . expr RIGHT_PAREN
   50         | LEFT_PAREN SEMICOLON expr SEMICOLON . RIGHT_PAREN

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    RIGHT_PAREN         shift, and go to state 297
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 298
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 287

   47 for_expr: LEFT_PAREN initial_clause SEMICOLON SEMICOLON . expr RIGHT_PAREN
   49         | LEFT_PAREN initial_clause SEMICOLON SEMICOLON . RIGHT_PAREN

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    RIGHT_PAREN         shift, and go to state 299
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 300
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 288

   45 for_expr: LEFT_PAREN initial_clause SEMICOLON expr . SEMICOLON expr RIGHT_PAREN
   48         | LEFT_PAREN initial_clause SEMICOLON expr . SEMICOLON RIGHT_PAREN

    SEMICOLON  shift, and go to state 301


state 289

   40 if_else_statement: IF LEFT_PAREN expr RIGHT_PAREN statement . ELSE statement
   41 if_statement: IF LEFT_PAREN expr RIGHT_PAREN statement .

    ELSE  shift, and go to state 302

    ELSE      [reduce using rule 41 (if_statement)]
    $default  reduce using rule 41 (if_statement)


state 290

   42 while_statement: WHILE LEFT_PAREN expr RIGHT_PAREN statement .

    $default  reduce using rule 42 (while_statement)


state 291

  109 conditional_expr: logical_or_expr QUESTION_MARK expr COLON conditional_expr .

    $default  reduce using rule 109 (conditional_expr)


state 292

   91 expression_list: expression_list COMMA assignment_expr .

    $default  reduce using rule 91 (expression_list)


state 293

   76 direct_abstract_declarator: direct_abstract_declarator LEFT_BRACKET constant_expr RIGHT_BRACKET .

    $default  reduce using rule 76 (direct_abstract_declarator)


state 294

   79 direct_abstract_declarator: direct_abstract_declarator LEFT_PAREN parameter_type_list RIGHT_PAREN .

    $default  reduce using rule 79 (direct_abstract_declarator)


state 295

   43 do_statement: DO statement WHILE LEFT_PAREN expr RIGHT_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 303


state 296

   51 for_expr: LEFT_PAREN SEMICOLON SEMICOLON expr RIGHT_PAREN .

    $default  reduce using rule 51 (for_expr)


state 297

   50 for_expr: LEFT_PAREN SEMICOLON expr SEMICOLON RIGHT_PAREN .

    $default  reduce using rule 50 (for_expr)


state 298

   46 for_expr: LEFT_PAREN SEMICOLON expr SEMICOLON expr . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 304


state 299

   49 for_expr: LEFT_PAREN initial_clause SEMICOLON SEMICOLON RIGHT_PAREN .

    $default  reduce using rule 49 (for_expr)


state 300

   47 for_expr: LEFT_PAREN initial_clause SEMICOLON SEMICOLON expr . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 305


state 301

   45 for_expr: LEFT_PAREN initial_clause SEMICOLON expr SEMICOLON . expr RIGHT_PAREN
   48         | LEFT_PAREN initial_clause SEMICOLON expr SEMICOLON . RIGHT_PAREN

    IDENTIFIER          shift, and go to state 134
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_PAREN          shift, and go to state 72
    RIGHT_PAREN         shift, and go to state 306
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    expr                   go to state 307
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 302

   40 if_else_statement: IF LEFT_PAREN expr RIGHT_PAREN statement ELSE . statement

    error               shift, and go to state 58
    DO                  shift, and go to state 59
    FOR                 shift, and go to state 60
    RETURN              shift, and go to state 61
    BREAK               shift, and go to state 62
    GOTO                shift, and go to state 63
    IF                  shift, and go to state 64
    CONTINUE            shift, and go to state 65
    WHILE               shift, and go to state 66
    IDENTIFIER          shift, and go to state 67
    STRING_CONST        shift, and go to state 68
    INTEGER_CONST       shift, and go to state 69
    LEFT_CURLY_BRACE    shift, and go to state 45
    SEMICOLON           shift, and go to state 71
    LEFT_PAREN          shift, and go to state 72
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    BITWISE_COMPLEMENT  shift, and go to state 75
    LOGICAL_NOT         shift, and go to state 76
    PLUS                shift, and go to state 77
    DASH                shift, and go to state 78
    AMPERSAND           shift, and go to state 79
    STAR                shift, and go to state 80

    compound_statement     go to state 82
    statement              go to state 308
    labeled_statement      go to state 86
    expression_statement   go to state 87
    conditional_statement  go to state 88
    iterative_statement    go to state 89
    break_statement        go to state 90
    continue_statement     go to state 91
    return_statement       go to state 92
    goto_statement         go to state 93
    named_label            go to state 94
    null_statement         go to state 95
    label                  go to state 96
    if_else_statement      go to state 97
    if_statement           go to state 98
    while_statement        go to state 99
    do_statement           go to state 100
    for_statement          go to state 101
    expr                   go to state 102
    comma_expr             go to state 103
    assignment_expr        go to state 104
    conditional_expr       go to state 105
    logical_or_expr        go to state 106
    logical_and_expr       go to state 107
    bitwise_and_expr       go to state 108
    equality_expr          go to state 109
    relational_expr        go to state 110
    shift_expr             go to state 111
    additive_expr          go to state 112
    multiplicative_expr    go to state 113
    cast_expr              go to state 114
    bitwise_or_expr        go to state 116
    bitwise_xor_expr       go to state 117
    unary_expr             go to state 118
    unary_minus_expr       go to state 119
    unary_plus_expr        go to state 120
    logical_negation_expr  go to state 121
    bitwise_negation_expr  go to state 122
    address_expr           go to state 123
    indirection_expr       go to state 124
    postfix_expr           go to state 125
    primary_expr           go to state 126
    parenthesized_expr     go to state 127
    subscript_expr         go to state 128
    predecrement_expr      go to state 129
    preincrement_expr      go to state 130
    function_call          go to state 131
    postdecrement_expr     go to state 132
    postincrement_expr     go to state 133


state 303

   43 do_statement: DO statement WHILE LEFT_PAREN expr RIGHT_PAREN SEMICOLON .

    $default  reduce using rule 43 (do_statement)


state 304

   46 for_expr: LEFT_PAREN SEMICOLON expr SEMICOLON expr RIGHT_PAREN .

    $default  reduce using rule 46 (for_expr)


state 305

   47 for_expr: LEFT_PAREN initial_clause SEMICOLON SEMICOLON expr RIGHT_PAREN .

    $default  reduce using rule 47 (for_expr)


state 306

   48 for_expr: LEFT_PAREN initial_clause SEMICOLON expr SEMICOLON RIGHT_PAREN .

    $default  reduce using rule 48 (for_expr)


state 307

   45 for_expr: LEFT_PAREN initial_clause SEMICOLON expr SEMICOLON expr . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 309


state 308

   40 if_else_statement: IF LEFT_PAREN expr RIGHT_PAREN statement ELSE statement .

    $default  reduce using rule 40 (if_else_statement)


state 309

   45 for_expr: LEFT_PAREN initial_clause SEMICOLON expr SEMICOLON expr RIGHT_PAREN .

    $default  reduce using rule 45 (for_expr)
